"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/generate-voice/route";
exports.ids = ["app/api/generate-voice/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "assert":
/*!*************************!*\
  !*** external "assert" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("assert");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "tty":
/*!**********************!*\
  !*** external "tty" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("tty");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fgenerate-voice%2Froute&page=%2Fapi%2Fgenerate-voice%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgenerate-voice%2Froute.ts&appDir=C%3A%5CUsers%5CDELL%5COneDrive%5CDesktop%5Cml%20project%5Cai_weathervoice%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CDELL%5COneDrive%5CDesktop%5Cml%20project%5Cai_weathervoice&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fgenerate-voice%2Froute&page=%2Fapi%2Fgenerate-voice%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgenerate-voice%2Froute.ts&appDir=C%3A%5CUsers%5CDELL%5COneDrive%5CDesktop%5Cml%20project%5Cai_weathervoice%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CDELL%5COneDrive%5CDesktop%5Cml%20project%5Cai_weathervoice&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_DELL_OneDrive_Desktop_ml_project_ai_weathervoice_app_api_generate_voice_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/generate-voice/route.ts */ \"(rsc)/./app/api/generate-voice/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/generate-voice/route\",\n        pathname: \"/api/generate-voice\",\n        filename: \"route\",\n        bundlePath: \"app/api/generate-voice/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Desktop\\\\ml project\\\\ai_weathervoice\\\\app\\\\api\\\\generate-voice\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_DELL_OneDrive_Desktop_ml_project_ai_weathervoice_app_api_generate_voice_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/generate-voice/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZnZW5lcmF0ZS12b2ljZSUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGZ2VuZXJhdGUtdm9pY2UlMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZnZW5lcmF0ZS12b2ljZSUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNERUxMJTVDT25lRHJpdmUlNUNEZXNrdG9wJTVDbWwlMjBwcm9qZWN0JTVDYWlfd2VhdGhlcnZvaWNlJTVDYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj1DJTNBJTVDVXNlcnMlNUNERUxMJTVDT25lRHJpdmUlNUNEZXNrdG9wJTVDbWwlMjBwcm9qZWN0JTVDYWlfd2VhdGhlcnZvaWNlJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUNtRDtBQUNoSTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLGlFQUFpRTtBQUN6RTtBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ3VIOztBQUV2SCIsInNvdXJjZXMiOlsid2VicGFjazovL2FpX3dlYXRoZXJ2b2ljZS8/ZjJjNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCJDOlxcXFxVc2Vyc1xcXFxERUxMXFxcXE9uZURyaXZlXFxcXERlc2t0b3BcXFxcbWwgcHJvamVjdFxcXFxhaV93ZWF0aGVydm9pY2VcXFxcYXBwXFxcXGFwaVxcXFxnZW5lcmF0ZS12b2ljZVxcXFxyb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvZ2VuZXJhdGUtdm9pY2Uvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9nZW5lcmF0ZS12b2ljZVwiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvZ2VuZXJhdGUtdm9pY2Uvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCJDOlxcXFxVc2Vyc1xcXFxERUxMXFxcXE9uZURyaXZlXFxcXERlc2t0b3BcXFxcbWwgcHJvamVjdFxcXFxhaV93ZWF0aGVydm9pY2VcXFxcYXBwXFxcXGFwaVxcXFxnZW5lcmF0ZS12b2ljZVxcXFxyb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvZ2VuZXJhdGUtdm9pY2Uvcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgb3JpZ2luYWxQYXRobmFtZSwgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fgenerate-voice%2Froute&page=%2Fapi%2Fgenerate-voice%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgenerate-voice%2Froute.ts&appDir=C%3A%5CUsers%5CDELL%5COneDrive%5CDesktop%5Cml%20project%5Cai_weathervoice%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CDELL%5COneDrive%5CDesktop%5Cml%20project%5Cai_weathervoice&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/generate-voice/route.ts":
/*!*****************************************!*\
  !*** ./app/api/generate-voice/route.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! axios */ \"(rsc)/./node_modules/axios/lib/axios.js\");\n/* harmony import */ var _app_lib_gemini_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/app/lib/gemini-api */ \"(rsc)/./app/lib/gemini-api.ts\");\n/* harmony import */ var _app_lib_elevenlabs_tts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/app/lib/elevenlabs-tts */ \"(rsc)/./app/lib/elevenlabs-tts.ts\");\n\n\n\n\n// Maximum retries for speech synthesis\nconst MAX_RETRIES = 2;\n// Simple fallback text-to-speech function (for when ElevenLabs is not available)\nasync function fallbackTTS(text) {\n    try {\n        // Use a free TTS API as fallback\n        const response = await (0,axios__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({\n            method: \"GET\",\n            url: `https://translate.google.com/translate_tts?ie=UTF-8&q=${encodeURIComponent(text.substring(0, 200) // Limit length for free API\n            )}&tl=en&client=tw-ob`,\n            responseType: \"arraybuffer\"\n        });\n        return Buffer.from(response.data);\n    } catch (error) {\n        console.error(\"Fallback TTS failed:\", error);\n        throw new Error(\"Both primary and fallback TTS failed\");\n    }\n}\nasync function POST(request) {\n    try {\n        const body = await request.json();\n        const { weatherData, motivationalMessage, sendNow, deliveryMethod, contactInfo } = body;\n        // Validate input\n        if (!weatherData) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Weather data is required\"\n            }, {\n                status: 400\n            });\n        }\n        // Explicitly log the received weatherData for debugging\n        console.log(\"Received weather data:\", JSON.stringify(weatherData));\n        const { city, temperature, description } = weatherData;\n        if (!city || temperature === undefined || !description) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Weather data must include city, temperature, and description\"\n            }, {\n                status: 400\n            });\n        }\n        console.log(\"Generating voice note for\", city);\n        console.log(\"Weather:\", temperature, description);\n        if (motivationalMessage) {\n            console.log(\"Motivational message:\", motivationalMessage);\n        }\n        try {\n            // Generate voice content using Gemini\n            const voiceContent = await (0,_app_lib_gemini_api__WEBPACK_IMPORTED_MODULE_1__.generateWeatherUpdate)(weatherData, motivationalMessage);\n            console.log(\"Generated voice content:\", voiceContent.substring(0, 100) + \"...\");\n            // Try to synthesize speech with ElevenLabs first\n            let audioFilename = \"\";\n            let usedFallback = false;\n            let maxRetries = 2;\n            let retryCount = 0;\n            let error = null;\n            while(retryCount <= maxRetries){\n                try {\n                    console.log(`ElevenLabs synthesis attempt ${retryCount + 1}/${maxRetries + 1}`);\n                    audioFilename = await (0,_app_lib_elevenlabs_tts__WEBPACK_IMPORTED_MODULE_2__.synthesizeSpeech)(voiceContent);\n                    console.log(\"Successfully generated audio:\", audioFilename);\n                    break;\n                } catch (err) {\n                    error = err;\n                    console.error(`ElevenLabs synthesis attempt ${retryCount + 1} failed:`, err);\n                    retryCount++;\n                    if (retryCount > maxRetries) {\n                        console.log(\"All ElevenLabs attempts failed, trying fallback TTS...\");\n                        // Use fallback TTS service\n                        try {\n                            const fallbackResponse = await fetch(new URL(\"/api/elevenlabs-fallback\", request.url).toString(), {\n                                method: \"POST\",\n                                headers: {\n                                    \"Content-Type\": \"application/json\"\n                                },\n                                body: JSON.stringify({\n                                    text: voiceContent\n                                })\n                            });\n                            if (!fallbackResponse.ok) {\n                                throw new Error(`Fallback TTS failed with status: ${fallbackResponse.status}`);\n                            }\n                            const fallbackData = await fallbackResponse.json();\n                            audioFilename = fallbackData.audioFilename;\n                            usedFallback = true;\n                            console.log(\"Successfully used fallback TTS:\", audioFilename);\n                        } catch (fallbackErr) {\n                            console.error(\"Fallback TTS also failed:\", fallbackErr);\n                            throw new Error(\"Both primary and fallback TTS services failed\");\n                        }\n                    }\n                }\n            }\n            if (!audioFilename) {\n                throw new Error(\"Failed to generate audio\");\n            }\n            // If sendNow is true, send the voice note immediately\n            let sendResult = null;\n            if (sendNow && deliveryMethod && contactInfo) {\n                try {\n                    // Implementation for sending the voice note via the specified delivery method\n                    // This could be email, SMS, etc.\n                    console.log(`Sending voice note via ${deliveryMethod} to ${contactInfo}`);\n                    // Send the voice note\n                    const sendResponse = await fetch(new URL(\"/api/send-voice\", request.url).toString(), {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"application/json\"\n                        },\n                        body: JSON.stringify({\n                            audioFilename,\n                            deliveryMethod,\n                            contactInfo,\n                            weatherData\n                        })\n                    });\n                    sendResult = await sendResponse.json();\n                    console.log(\"Send result:\", sendResult);\n                } catch (err) {\n                    console.error(\"Error sending voice note:\", err);\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        error: \"Failed to send voice note\",\n                        audioFilename,\n                        usedFallback\n                    }, {\n                        status: 500\n                    });\n                }\n            }\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: true,\n                audioFilename,\n                sendResult,\n                usedFallback\n            });\n        } catch (error) {\n            console.error(\"Error generating voice note:\", error);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Failed to generate voice note\",\n                details: error.message\n            }, {\n                status: 500\n            });\n        }\n    } catch (error) {\n        console.error(\"Error processing request:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Invalid request\"\n        }, {\n            status: 400\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/generate-voice/route.ts\n");

/***/ }),

/***/ "(rsc)/./app/lib/elevenlabs-tts.ts":
/*!***********************************!*\
  !*** ./app/lib/elevenlabs-tts.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAvailableVoices: () => (/* binding */ getAvailableVoices),\n/* harmony export */   synthesizeSpeech: () => (/* binding */ synthesizeSpeech)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! axios */ \"(rsc)/./node_modules/axios/lib/axios.js\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uuid */ \"(rsc)/./node_modules/uuid/dist/esm-node/v4.js\");\n\n\n\n\nasync function getAvailableVoices() {\n    const apiKey = process.env.ELEVENLABS_API_KEY;\n    if (!apiKey) {\n        throw new Error(\"ELEVENLABS_API_KEY is not defined in environment variables\");\n    }\n    try {\n        const response = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].get(\"https://api.elevenlabs.io/v1/voices\", {\n            headers: {\n                \"xi-api-key\": apiKey\n            }\n        });\n        return response.data.voices;\n    } catch (error) {\n        console.error(\"Error fetching ElevenLabs voices:\", error.message);\n        throw new Error(`Failed to fetch ElevenLabs voices: ${error.message}`);\n    }\n}\nasync function synthesizeSpeech(text) {\n    const apiKey = process.env.ELEVENLABS_API_KEY;\n    if (!apiKey) {\n        throw new Error(\"ELEVENLABS_API_KEY is not defined in environment variables\");\n    }\n    // Default voice ID - Rachel\n    const voiceId = process.env.ELEVENLABS_VOICE_ID || \"21m00Tcm4TlvDq8ikWAM\";\n    try {\n        // Prepare the request options\n        const options = {\n            method: \"POST\",\n            url: `https://api.elevenlabs.io/v1/text-to-speech/${voiceId}`,\n            headers: {\n                \"xi-api-key\": apiKey,\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"audio/mpeg\"\n            },\n            data: {\n                text,\n                model_id: \"eleven_monolingual_v1\",\n                voice_settings: {\n                    stability: 0.6,\n                    similarity_boost: 0.75,\n                    style: 0.0,\n                    use_speaker_boost: true\n                }\n            },\n            responseType: \"arraybuffer\"\n        };\n        console.log(`Calling ElevenLabs API to synthesize speech (text length: ${text.length})`);\n        const response = await (0,axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(options);\n        // Create a unique filename\n        const fileName = `voice-note-${(0,uuid__WEBPACK_IMPORTED_MODULE_3__[\"default\"])()}.mp3`;\n        const audioDir = path__WEBPACK_IMPORTED_MODULE_1___default().join(process.cwd(), \"public\", \"audio\");\n        const audioPath = path__WEBPACK_IMPORTED_MODULE_1___default().join(audioDir, fileName);\n        // Ensure the audio directory exists\n        if (!fs__WEBPACK_IMPORTED_MODULE_0___default().existsSync(audioDir)) {\n            fs__WEBPACK_IMPORTED_MODULE_0___default().mkdirSync(audioDir, {\n                recursive: true\n            });\n        }\n        // Save the audio file\n        fs__WEBPACK_IMPORTED_MODULE_0___default().writeFileSync(audioPath, Buffer.from(response.data));\n        // Return the path to the audio file relative to the public directory\n        return `/audio/${fileName}`;\n    } catch (error) {\n        console.error(\"Error synthesizing speech with ElevenLabs:\", error.message);\n        if (error.response) {\n            console.error(\"ElevenLabs API error:\", {\n                status: error.response.status,\n                statusText: error.response.statusText,\n                data: error.response.data\n            });\n        }\n        throw new Error(`Failed to synthesize speech: ${error.message}`);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvbGliL2VsZXZlbmxhYnMtdHRzLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQTBCO0FBQ047QUFDSTtBQUNZO0FBa0I3QixlQUFlSztJQUNwQixNQUFNQyxTQUFTQyxRQUFRQyxHQUFHLENBQUNDLGtCQUFrQjtJQUM3QyxJQUFJLENBQUNILFFBQVE7UUFDWCxNQUFNLElBQUlJLE1BQU07SUFDbEI7SUFFQSxJQUFJO1FBQ0YsTUFBTUMsV0FBVyxNQUFNWCw2Q0FBS0EsQ0FBQ1ksR0FBRyxDQUFDLHVDQUF1QztZQUN0RUMsU0FBUztnQkFDUCxjQUFjUDtZQUNoQjtRQUNGO1FBRUEsT0FBT0ssU0FBU0csSUFBSSxDQUFDQyxNQUFNO0lBQzdCLEVBQUUsT0FBT0MsT0FBWTtRQUNuQkMsUUFBUUQsS0FBSyxDQUFDLHFDQUFxQ0EsTUFBTUUsT0FBTztRQUNoRSxNQUFNLElBQUlSLE1BQU0sQ0FBQyxtQ0FBbUMsRUFBRU0sTUFBTUUsT0FBTyxDQUFDLENBQUM7SUFDdkU7QUFDRjtBQUVPLGVBQWVDLGlCQUFpQkMsSUFBWTtJQUNqRCxNQUFNZCxTQUFTQyxRQUFRQyxHQUFHLENBQUNDLGtCQUFrQjtJQUM3QyxJQUFJLENBQUNILFFBQVE7UUFDWCxNQUFNLElBQUlJLE1BQU07SUFDbEI7SUFFQSw0QkFBNEI7SUFDNUIsTUFBTVcsVUFBVWQsUUFBUUMsR0FBRyxDQUFDYyxtQkFBbUIsSUFBSTtJQUVuRCxJQUFJO1FBQ0YsOEJBQThCO1FBQzlCLE1BQU1DLFVBQVU7WUFDZEMsUUFBUTtZQUNSQyxLQUFLLENBQUMsNENBQTRDLEVBQUVKLFFBQVEsQ0FBQztZQUM3RFIsU0FBUztnQkFDUCxjQUFjUDtnQkFDZCxnQkFBZ0I7Z0JBQ2hCLFVBQVU7WUFDWjtZQUNBUSxNQUFNO2dCQUNKTTtnQkFDQU0sVUFBVTtnQkFDVkMsZ0JBQWdCO29CQUNkQyxXQUFXO29CQUNYQyxrQkFBa0I7b0JBQ2xCQyxPQUFPO29CQUNQQyxtQkFBbUI7Z0JBQ3JCO1lBQ0Y7WUFDQUMsY0FBYztRQUNoQjtRQUVBZixRQUFRZ0IsR0FBRyxDQUFDLENBQUMsMERBQTBELEVBQUViLEtBQUtjLE1BQU0sQ0FBQyxDQUFDLENBQUM7UUFDdkYsTUFBTXZCLFdBQVcsTUFBTVgsaURBQUtBLENBQUN1QjtRQUU3QiwyQkFBMkI7UUFDM0IsTUFBTVksV0FBVyxDQUFDLFdBQVcsRUFBRS9CLGdEQUFNQSxHQUFHLElBQUksQ0FBQztRQUM3QyxNQUFNZ0MsV0FBV2xDLGdEQUFTLENBQUNLLFFBQVErQixHQUFHLElBQUksVUFBVTtRQUNwRCxNQUFNQyxZQUFZckMsZ0RBQVMsQ0FBQ2tDLFVBQVVEO1FBRXRDLG9DQUFvQztRQUNwQyxJQUFJLENBQUNsQyxvREFBYSxDQUFDbUMsV0FBVztZQUM1Qm5DLG1EQUFZLENBQUNtQyxVQUFVO2dCQUFFTSxXQUFXO1lBQUs7UUFDM0M7UUFFQSxzQkFBc0I7UUFDdEJ6Qyx1REFBZ0IsQ0FBQ3NDLFdBQVdLLE9BQU9DLElBQUksQ0FBQ2xDLFNBQVNHLElBQUk7UUFFckQscUVBQXFFO1FBQ3JFLE9BQU8sQ0FBQyxPQUFPLEVBQUVxQixTQUFTLENBQUM7SUFDN0IsRUFBRSxPQUFPbkIsT0FBWTtRQUNuQkMsUUFBUUQsS0FBSyxDQUFDLDhDQUE4Q0EsTUFBTUUsT0FBTztRQUN6RSxJQUFJRixNQUFNTCxRQUFRLEVBQUU7WUFDbEJNLFFBQVFELEtBQUssQ0FBQyx5QkFBeUI7Z0JBQ3JDOEIsUUFBUTlCLE1BQU1MLFFBQVEsQ0FBQ21DLE1BQU07Z0JBQzdCQyxZQUFZL0IsTUFBTUwsUUFBUSxDQUFDb0MsVUFBVTtnQkFDckNqQyxNQUFNRSxNQUFNTCxRQUFRLENBQUNHLElBQUk7WUFDM0I7UUFDRjtRQUNBLE1BQU0sSUFBSUosTUFBTSxDQUFDLDZCQUE2QixFQUFFTSxNQUFNRSxPQUFPLENBQUMsQ0FBQztJQUNqRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWlfd2VhdGhlcnZvaWNlLy4vYXBwL2xpYi9lbGV2ZW5sYWJzLXR0cy50cz9iYTU0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7XHJcbmltcG9ydCBmcyBmcm9tICdmcyc7XHJcbmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnO1xyXG5pbXBvcnQgeyB2NCBhcyB1dWlkdjQgfSBmcm9tICd1dWlkJztcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgRWxldmVuTGFic1ZvaWNlIHtcclxuICB2b2ljZV9pZDogc3RyaW5nO1xyXG4gIG5hbWU6IHN0cmluZztcclxuICBjYXRlZ29yeT86IHN0cmluZztcclxuICBkZXNjcmlwdGlvbj86IHN0cmluZztcclxufVxyXG5cclxuaW50ZXJmYWNlIFN5bnRoZXNpc09wdGlvbnMge1xyXG4gIHRleHQ6IHN0cmluZztcclxuICB2b2ljZV9pZD86IHN0cmluZztcclxuICBzdGFiaWxpdHk/OiBudW1iZXI7XHJcbiAgc2ltaWxhcml0eUJvb3N0PzogbnVtYmVyO1xyXG4gIHNwZWFrZXJCb29zdD86IGJvb2xlYW47XHJcbiAgc3R5bGU/OiBudW1iZXI7XHJcbn1cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRBdmFpbGFibGVWb2ljZXMoKTogUHJvbWlzZTxFbGV2ZW5MYWJzVm9pY2VbXT4ge1xyXG4gIGNvbnN0IGFwaUtleSA9IHByb2Nlc3MuZW52LkVMRVZFTkxBQlNfQVBJX0tFWTtcclxuICBpZiAoIWFwaUtleSkge1xyXG4gICAgdGhyb3cgbmV3IEVycm9yKCdFTEVWRU5MQUJTX0FQSV9LRVkgaXMgbm90IGRlZmluZWQgaW4gZW52aXJvbm1lbnQgdmFyaWFibGVzJyk7XHJcbiAgfVxyXG5cclxuICB0cnkge1xyXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBheGlvcy5nZXQoJ2h0dHBzOi8vYXBpLmVsZXZlbmxhYnMuaW8vdjEvdm9pY2VzJywge1xyXG4gICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgJ3hpLWFwaS1rZXknOiBhcGlLZXksXHJcbiAgICAgIH0sXHJcbiAgICB9KTtcclxuXHJcbiAgICByZXR1cm4gcmVzcG9uc2UuZGF0YS52b2ljZXM7XHJcbiAgfSBjYXRjaCAoZXJyb3I6IGFueSkge1xyXG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgZmV0Y2hpbmcgRWxldmVuTGFicyB2b2ljZXM6JywgZXJyb3IubWVzc2FnZSk7XHJcbiAgICB0aHJvdyBuZXcgRXJyb3IoYEZhaWxlZCB0byBmZXRjaCBFbGV2ZW5MYWJzIHZvaWNlczogJHtlcnJvci5tZXNzYWdlfWApO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHN5bnRoZXNpemVTcGVlY2godGV4dDogc3RyaW5nKTogUHJvbWlzZTxzdHJpbmc+IHtcclxuICBjb25zdCBhcGlLZXkgPSBwcm9jZXNzLmVudi5FTEVWRU5MQUJTX0FQSV9LRVk7XHJcbiAgaWYgKCFhcGlLZXkpIHtcclxuICAgIHRocm93IG5ldyBFcnJvcignRUxFVkVOTEFCU19BUElfS0VZIGlzIG5vdCBkZWZpbmVkIGluIGVudmlyb25tZW50IHZhcmlhYmxlcycpO1xyXG4gIH1cclxuXHJcbiAgLy8gRGVmYXVsdCB2b2ljZSBJRCAtIFJhY2hlbFxyXG4gIGNvbnN0IHZvaWNlSWQgPSBwcm9jZXNzLmVudi5FTEVWRU5MQUJTX1ZPSUNFX0lEIHx8ICcyMW0wMFRjbTRUbHZEcThpa1dBTSc7XHJcblxyXG4gIHRyeSB7XHJcbiAgICAvLyBQcmVwYXJlIHRoZSByZXF1ZXN0IG9wdGlvbnNcclxuICAgIGNvbnN0IG9wdGlvbnMgPSB7XHJcbiAgICAgIG1ldGhvZDogJ1BPU1QnLFxyXG4gICAgICB1cmw6IGBodHRwczovL2FwaS5lbGV2ZW5sYWJzLmlvL3YxL3RleHQtdG8tc3BlZWNoLyR7dm9pY2VJZH1gLFxyXG4gICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgJ3hpLWFwaS1rZXknOiBhcGlLZXksXHJcbiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuICAgICAgICAnQWNjZXB0JzogJ2F1ZGlvL21wZWcnXHJcbiAgICAgIH0sXHJcbiAgICAgIGRhdGE6IHtcclxuICAgICAgICB0ZXh0LFxyXG4gICAgICAgIG1vZGVsX2lkOiAnZWxldmVuX21vbm9saW5ndWFsX3YxJyxcclxuICAgICAgICB2b2ljZV9zZXR0aW5nczoge1xyXG4gICAgICAgICAgc3RhYmlsaXR5OiAwLjYsXHJcbiAgICAgICAgICBzaW1pbGFyaXR5X2Jvb3N0OiAwLjc1LFxyXG4gICAgICAgICAgc3R5bGU6IDAuMCxcclxuICAgICAgICAgIHVzZV9zcGVha2VyX2Jvb3N0OiB0cnVlXHJcbiAgICAgICAgfVxyXG4gICAgICB9LFxyXG4gICAgICByZXNwb25zZVR5cGU6ICdhcnJheWJ1ZmZlcicgYXMgY29uc3RcclxuICAgIH07XHJcblxyXG4gICAgY29uc29sZS5sb2coYENhbGxpbmcgRWxldmVuTGFicyBBUEkgdG8gc3ludGhlc2l6ZSBzcGVlY2ggKHRleHQgbGVuZ3RoOiAke3RleHQubGVuZ3RofSlgKTtcclxuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3Mob3B0aW9ucyk7XHJcbiAgICBcclxuICAgIC8vIENyZWF0ZSBhIHVuaXF1ZSBmaWxlbmFtZVxyXG4gICAgY29uc3QgZmlsZU5hbWUgPSBgdm9pY2Utbm90ZS0ke3V1aWR2NCgpfS5tcDNgO1xyXG4gICAgY29uc3QgYXVkaW9EaXIgPSBwYXRoLmpvaW4ocHJvY2Vzcy5jd2QoKSwgJ3B1YmxpYycsICdhdWRpbycpO1xyXG4gICAgY29uc3QgYXVkaW9QYXRoID0gcGF0aC5qb2luKGF1ZGlvRGlyLCBmaWxlTmFtZSk7XHJcbiAgICBcclxuICAgIC8vIEVuc3VyZSB0aGUgYXVkaW8gZGlyZWN0b3J5IGV4aXN0c1xyXG4gICAgaWYgKCFmcy5leGlzdHNTeW5jKGF1ZGlvRGlyKSkge1xyXG4gICAgICBmcy5ta2RpclN5bmMoYXVkaW9EaXIsIHsgcmVjdXJzaXZlOiB0cnVlIH0pO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAvLyBTYXZlIHRoZSBhdWRpbyBmaWxlXHJcbiAgICBmcy53cml0ZUZpbGVTeW5jKGF1ZGlvUGF0aCwgQnVmZmVyLmZyb20ocmVzcG9uc2UuZGF0YSkpO1xyXG4gICAgXHJcbiAgICAvLyBSZXR1cm4gdGhlIHBhdGggdG8gdGhlIGF1ZGlvIGZpbGUgcmVsYXRpdmUgdG8gdGhlIHB1YmxpYyBkaXJlY3RvcnlcclxuICAgIHJldHVybiBgL2F1ZGlvLyR7ZmlsZU5hbWV9YDtcclxuICB9IGNhdGNoIChlcnJvcjogYW55KSB7XHJcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBzeW50aGVzaXppbmcgc3BlZWNoIHdpdGggRWxldmVuTGFiczonLCBlcnJvci5tZXNzYWdlKTtcclxuICAgIGlmIChlcnJvci5yZXNwb25zZSkge1xyXG4gICAgICBjb25zb2xlLmVycm9yKCdFbGV2ZW5MYWJzIEFQSSBlcnJvcjonLCB7XHJcbiAgICAgICAgc3RhdHVzOiBlcnJvci5yZXNwb25zZS5zdGF0dXMsXHJcbiAgICAgICAgc3RhdHVzVGV4dDogZXJyb3IucmVzcG9uc2Uuc3RhdHVzVGV4dCxcclxuICAgICAgICBkYXRhOiBlcnJvci5yZXNwb25zZS5kYXRhXHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgdGhyb3cgbmV3IEVycm9yKGBGYWlsZWQgdG8gc3ludGhlc2l6ZSBzcGVlY2g6ICR7ZXJyb3IubWVzc2FnZX1gKTtcclxuICB9XHJcbn0gIl0sIm5hbWVzIjpbImF4aW9zIiwiZnMiLCJwYXRoIiwidjQiLCJ1dWlkdjQiLCJnZXRBdmFpbGFibGVWb2ljZXMiLCJhcGlLZXkiLCJwcm9jZXNzIiwiZW52IiwiRUxFVkVOTEFCU19BUElfS0VZIiwiRXJyb3IiLCJyZXNwb25zZSIsImdldCIsImhlYWRlcnMiLCJkYXRhIiwidm9pY2VzIiwiZXJyb3IiLCJjb25zb2xlIiwibWVzc2FnZSIsInN5bnRoZXNpemVTcGVlY2giLCJ0ZXh0Iiwidm9pY2VJZCIsIkVMRVZFTkxBQlNfVk9JQ0VfSUQiLCJvcHRpb25zIiwibWV0aG9kIiwidXJsIiwibW9kZWxfaWQiLCJ2b2ljZV9zZXR0aW5ncyIsInN0YWJpbGl0eSIsInNpbWlsYXJpdHlfYm9vc3QiLCJzdHlsZSIsInVzZV9zcGVha2VyX2Jvb3N0IiwicmVzcG9uc2VUeXBlIiwibG9nIiwibGVuZ3RoIiwiZmlsZU5hbWUiLCJhdWRpb0RpciIsImpvaW4iLCJjd2QiLCJhdWRpb1BhdGgiLCJleGlzdHNTeW5jIiwibWtkaXJTeW5jIiwicmVjdXJzaXZlIiwid3JpdGVGaWxlU3luYyIsIkJ1ZmZlciIsImZyb20iLCJzdGF0dXMiLCJzdGF0dXNUZXh0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./app/lib/elevenlabs-tts.ts\n");

/***/ }),

/***/ "(rsc)/./app/lib/gemini-api.ts":
/*!*******************************!*\
  !*** ./app/lib/gemini-api.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateWeatherUpdate: () => (/* binding */ generateWeatherUpdate),\n/* harmony export */   initGeminiApi: () => (/* binding */ initGeminiApi)\n/* harmony export */ });\n/* harmony import */ var _google_generative_ai__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @google/generative-ai */ \"(rsc)/./node_modules/@google/generative-ai/dist/index.mjs\");\n\n// Initialize the Google Generative AI SDK with the API key\nconst initGeminiApi = ()=>{\n    const apiKey = process.env.GEMINI_API_KEY;\n    if (!apiKey) {\n        throw new Error(\"GEMINI_API_KEY not found in environment variables\");\n    }\n    return new _google_generative_ai__WEBPACK_IMPORTED_MODULE_0__.GoogleGenerativeAI(apiKey);\n};\n// Generate a weather update using Google's Gemini API\nasync function generateWeatherUpdate(weatherData, motivationalMessage) {\n    try {\n        // First try to generate using Gemini API\n        return await generateWithGemini(weatherData, motivationalMessage);\n    } catch (error) {\n        console.error(\"Error using Gemini API for text generation:\", error);\n        console.log(\"Using fallback text generation method instead...\");\n        // Use fallback method if Gemini fails\n        return generateFallbackText(weatherData, motivationalMessage);\n    }\n}\n// Fallback text generation that doesn't require AI API\nfunction generateFallbackText(weatherData, motivationalMessage) {\n    const location = weatherData.city || \"your location\";\n    const temperature = weatherData.temperature !== undefined ? `${weatherData.temperature}°C` : \"unknown temperature\";\n    const description = weatherData.description || \"changing weather conditions\";\n    const humidity = weatherData.humidity !== undefined ? `${weatherData.humidity}%` : \"moderate\";\n    const windSpeed = weatherData.windSpeed !== undefined ? `${weatherData.windSpeed} km/h` : \"light\";\n    const weatherPart = `Weather update for ${location}: Currently it's ${temperature} with ${description}. \r\n  The humidity is ${humidity} and wind speed is ${windSpeed}.`;\n    let advicePart = \"\";\n    // Generate some basic advice based on the weather description\n    if (description.includes(\"rain\") || description.includes(\"drizzle\")) {\n        advicePart = \"Don't forget to carry an umbrella if you're going outside today.\";\n    } else if (description.includes(\"snow\")) {\n        advicePart = \"It's snowing, so wear warm clothes and be careful on slippery surfaces.\";\n    } else if (description.includes(\"cloud\")) {\n        advicePart = \"It's cloudy today, so the temperature might feel cooler than it actually is.\";\n    } else if (description.includes(\"clear\") || description.includes(\"sun\")) {\n        advicePart = \"It's a beautiful day! Consider spending some time outdoors if possible.\";\n    } else if (temperature && parseInt(temperature.toString()) > 30) {\n        advicePart = \"It's quite hot today, so stay hydrated and try to avoid prolonged exposure to the sun.\";\n    } else if (temperature && parseInt(temperature.toString()) < 5) {\n        advicePart = \"It's very cold today, so make sure to dress in layers and keep warm.\";\n    } else {\n        advicePart = \"Whatever your plans are today, I hope the weather cooperates!\";\n    }\n    let motivationalPart = \"\";\n    if (motivationalMessage) {\n        motivationalPart = `Here's a thought for today: ${motivationalMessage}`;\n    }\n    return `${weatherPart} ${advicePart} ${motivationalPart}`.trim();\n}\n// Generate using Gemini AI API\nasync function generateWithGemini(weatherData, motivationalMessage) {\n    const genAI = initGeminiApi();\n    const geminiModel = genAI.getGenerativeModel({\n        model: \"gemini-pro\"\n    });\n    const location = weatherData.city;\n    const temperature = weatherData.temperature;\n    const description = weatherData.description;\n    const humidity = weatherData.humidity;\n    const windSpeed = weatherData.windSpeed;\n    let prompt = `Create a friendly, conversational weather update for ${location} where it's currently ${temperature}°C with ${description}.`;\n    if (humidity !== undefined) {\n        prompt += ` The humidity is ${humidity}%.`;\n    }\n    if (windSpeed !== undefined) {\n        prompt += ` The wind speed is ${windSpeed} km/h.`;\n    }\n    prompt += ` Add some relevant advice for the day based on these weather conditions.`;\n    if (motivationalMessage) {\n        prompt += ` Also, include this motivational quote in a natural way: \"${motivationalMessage}\"`;\n    }\n    prompt += ` The response should sound natural and human-like, as if it's being read aloud. \r\n  Keep it under 200 words and make it engaging. Don't include any headings, bullet points, or formatting.`;\n    try {\n        const result = await geminiModel.generateContent(prompt);\n        const response = result.response;\n        const text = response.text();\n        if (!text) {\n            throw new Error(\"Empty response from Gemini API\");\n        }\n        return text;\n    } catch (error) {\n        console.error(\"Error generating content with Gemini:\", error);\n        throw new Error(\"Failed to generate weather update content\");\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/lib/gemini-api.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/mime-db","vendor-chunks/axios","vendor-chunks/follow-redirects","vendor-chunks/debug","vendor-chunks/get-intrinsic","vendor-chunks/form-data","vendor-chunks/asynckit","vendor-chunks/combined-stream","vendor-chunks/mime-types","vendor-chunks/proxy-from-env","vendor-chunks/ms","vendor-chunks/supports-color","vendor-chunks/has-symbols","vendor-chunks/delayed-stream","vendor-chunks/function-bind","vendor-chunks/es-set-tostringtag","vendor-chunks/get-proto","vendor-chunks/call-bind-apply-helpers","vendor-chunks/dunder-proto","vendor-chunks/math-intrinsics","vendor-chunks/es-errors","vendor-chunks/has-flag","vendor-chunks/gopd","vendor-chunks/es-define-property","vendor-chunks/hasown","vendor-chunks/has-tostringtag","vendor-chunks/es-object-atoms","vendor-chunks/uuid","vendor-chunks/@google"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fgenerate-voice%2Froute&page=%2Fapi%2Fgenerate-voice%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgenerate-voice%2Froute.ts&appDir=C%3A%5CUsers%5CDELL%5COneDrive%5CDesktop%5Cml%20project%5Cai_weathervoice%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CDELL%5COneDrive%5CDesktop%5Cml%20project%5Cai_weathervoice&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();